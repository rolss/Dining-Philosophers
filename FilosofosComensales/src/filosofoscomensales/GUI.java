package filosofoscomensales;

import java.awt.Color;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author raulv
 */
public class GUI extends javax.swing.JFrame {
    static boolean[] comiendo = new boolean[5];
    public GUI() {
        initComponents();
        fil0.setVisible(false);
        fil1.setVisible(false);
        fil2.setVisible(false);
        fil3.setVisible(false);
        fil4.setVisible(false);
        speed_cbx.setSelectedItem("1 segundo");
        DefaultCaret caret = (DefaultCaret)log_txt.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plate4_lbl = new javax.swing.JLabel();
        plate0_lbl = new javax.swing.JLabel();
        plate2_lbl = new javax.swing.JLabel();
        plate1_lbl = new javax.swing.JLabel();
        plate3_lbl = new javax.swing.JLabel();
        fork_lbl3 = new javax.swing.JLabel();
        fork_lbl1 = new javax.swing.JLabel();
        fork_lbl2 = new javax.swing.JLabel();
        iniciar_btn = new javax.swing.JButton();
        fork_lbl4 = new javax.swing.JLabel();
        fork_lbl0 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        log_txt = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        counter0_txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        counter1_txt = new javax.swing.JTextField();
        counter2_txt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        counter3_txt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        counter4_txt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        esperando_txt = new javax.swing.JTextField();
        esperando_lbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        table_lbl = new javax.swing.JLabel();
        fil0 = new javax.swing.JLabel();
        fil1 = new javax.swing.JLabel();
        fil2 = new javax.swing.JLabel();
        fil3 = new javax.swing.JLabel();
        fil4 = new javax.swing.JLabel();
        estado0_txtt = new javax.swing.JLabel();
        estado4_txtt = new javax.swing.JLabel();
        estado1_txtt = new javax.swing.JLabel();
        estado2_txtt = new javax.swing.JLabel();
        estado3_txtt = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        max4_lbl = new javax.swing.JLabel();
        max0_lbl = new javax.swing.JLabel();
        max1_lbl = new javax.swing.JLabel();
        max2_lbl = new javax.swing.JLabel();
        max3_lbl = new javax.swing.JLabel();
        speed_cbx = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        plate4_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/emptydish_3_10.png"))); // NOI18N
        getContentPane().add(plate4_lbl);
        plate4_lbl.setBounds(450, 140, 51, 51);

        plate0_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/emptydish_3_10.png"))); // NOI18N
        getContentPane().add(plate0_lbl);
        plate0_lbl.setBounds(540, 70, 51, 51);

        plate2_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/emptydish_3_10.png"))); // NOI18N
        getContentPane().add(plate2_lbl);
        plate2_lbl.setBounds(600, 250, 51, 51);

        plate1_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/emptydish_3_10.png"))); // NOI18N
        getContentPane().add(plate1_lbl);
        plate1_lbl.setBounds(630, 140, 51, 51);

        plate3_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/emptydish_3_10.png"))); // NOI18N
        getContentPane().add(plate3_lbl);
        plate3_lbl.setBounds(470, 250, 51, 51);

        fork_lbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fork_lbl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/fork_3.png"))); // NOI18N
        getContentPane().add(fork_lbl3);
        fork_lbl3.setBounds(550, 270, 30, 70);

        fork_lbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/fork_1.png"))); // NOI18N
        getContentPane().add(fork_lbl1);
        fork_lbl1.setBounds(590, 90, 60, 60);

        fork_lbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/fork_1_5.png"))); // NOI18N
        getContentPane().add(fork_lbl2);
        fork_lbl2.setBounds(630, 200, 60, 60);

        iniciar_btn.setText("Iniciar");
        iniciar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciar_btnActionPerformed(evt);
            }
        });
        getContentPane().add(iniciar_btn);
        iniciar_btn.setBounds(20, 40, 110, 40);

        fork_lbl4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/fork_4.png"))); // NOI18N
        getContentPane().add(fork_lbl4);
        fork_lbl4.setBounds(440, 190, 70, 60);

        fork_lbl0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/fork_0.png"))); // NOI18N
        getContentPane().add(fork_lbl0);
        fork_lbl0.setBounds(480, 90, 60, 60);

        log_txt.setColumns(20);
        log_txt.setRows(5);
        log_txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        log_txt.setEnabled(false);
        jScrollPane1.setViewportView(log_txt);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 100, 270, 310);

        jLabel6.setText("Filosofo 0");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(850, 150, 70, 20);

        counter0_txt.setText("0");
        counter0_txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        counter0_txt.setEnabled(false);
        getContentPane().add(counter0_txt);
        counter0_txt.setBounds(920, 150, 20, 20);

        jLabel7.setText("Filosofo 1");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(850, 180, 80, 20);

        counter1_txt.setText("0");
        counter1_txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        counter1_txt.setEnabled(false);
        getContentPane().add(counter1_txt);
        counter1_txt.setBounds(920, 180, 20, 20);

        counter2_txt.setText("0");
        counter2_txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        counter2_txt.setEnabled(false);
        getContentPane().add(counter2_txt);
        counter2_txt.setBounds(920, 210, 20, 20);

        jLabel8.setText("Filosofo 2");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(850, 210, 80, 20);

        counter3_txt.setText("0");
        counter3_txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        counter3_txt.setEnabled(false);
        getContentPane().add(counter3_txt);
        counter3_txt.setBounds(920, 240, 20, 20);

        jLabel9.setText("Filosofo 3");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(850, 240, 80, 20);

        counter4_txt.setText("0");
        counter4_txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        counter4_txt.setEnabled(false);
        counter4_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                counter4_txtActionPerformed(evt);
            }
        });
        getContentPane().add(counter4_txt);
        counter4_txt.setBounds(920, 270, 20, 20);

        jLabel10.setText("Filosofo 4");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(850, 270, 70, 20);

        esperando_txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        esperando_txt.setEnabled(false);
        esperando_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esperando_txtActionPerformed(evt);
            }
        });
        getContentPane().add(esperando_txt);
        esperando_txt.setBounds(850, 320, 60, 20);

        esperando_lbl.setText("Filosofo esperando silla");
        getContentPane().add(esperando_lbl);
        esperando_lbl.setBounds(850, 300, 150, 20);

        jLabel2.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel2.setText("0");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(600, 10, 12, 20);

        jLabel3.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel3.setText("1");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(750, 80, 12, 20);

        jLabel4.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel4.setText("2");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(700, 370, 12, 20);

        jLabel5.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel5.setText("3");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(410, 360, 12, 20);

        jLabel12.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel12.setText("4");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(380, 90, 12, 20);

        table_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/table_1_15.png"))); // NOI18N
        getContentPane().add(table_lbl);
        table_lbl.setBounds(410, 50, 307, 307);

        fil0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/scribblenauts-philosopher_1_15.png"))); // NOI18N
        getContentPane().add(fil0);
        fil0.setBounds(500, -10, 110, 120);

        fil1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/scribblenauts-philosopher_1_15.png"))); // NOI18N
        getContentPane().add(fil1);
        fil1.setBounds(650, 70, 110, 120);

        fil2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/scribblenauts-philosopher_1_15.png"))); // NOI18N
        getContentPane().add(fil2);
        fil2.setBounds(610, 270, 110, 120);

        fil3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/scribblenauts-philosopher_1_15.png"))); // NOI18N
        getContentPane().add(fil3);
        fil3.setBounds(390, 260, 110, 120);

        fil4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/scribblenauts-philosopher_1_15.png"))); // NOI18N
        getContentPane().add(fil4);
        fil4.setBounds(360, 80, 110, 120);

        estado0_txtt.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        getContentPane().add(estado0_txtt);
        estado0_txtt.setBounds(630, 10, 140, 20);

        estado4_txtt.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        getContentPane().add(estado4_txtt);
        estado4_txtt.setBounds(320, 70, 130, 20);

        estado1_txtt.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        getContentPane().add(estado1_txtt);
        estado1_txtt.setBounds(780, 80, 130, 20);

        estado2_txtt.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        getContentPane().add(estado2_txtt);
        estado2_txtt.setBounds(730, 370, 130, 20);

        estado3_txtt.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        getContentPane().add(estado3_txtt);
        estado3_txtt.setBounds(350, 380, 150, 20);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Pensando: Filosofo no está comiendo, ni tiene tenedores\n\nEsperando: Filosofo tiene un tenedor y espera a que el segundo tenedor esté libre\n\nComiendo: Filosofo tiene sus dos tenedores y está comiendo\n\nSaciado: Filosofo vació su plato y no necesita comer más");
        jTextArea1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextArea1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea1.setEnabled(false);
        jTextArea1.setOpaque(false);
        jScrollPane2.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 420, 360, 130);
        getContentPane().add(max4_lbl);
        max4_lbl.setBounds(950, 270, 60, 20);
        getContentPane().add(max0_lbl);
        max0_lbl.setBounds(950, 150, 60, 20);
        getContentPane().add(max1_lbl);
        max1_lbl.setBounds(950, 180, 60, 20);
        getContentPane().add(max2_lbl);
        max2_lbl.setBounds(950, 210, 60, 20);
        getContentPane().add(max3_lbl);
        max3_lbl.setBounds(950, 240, 60, 20);

        speed_cbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0.5 segundos", "1 segundo", "2 segundos", "3 segundos", "5 segundos" }));
        getContentPane().add(speed_cbx);
        speed_cbx.setBounds(150, 50, 120, 20);

        jLabel1.setText("Seleccionar la velocidad");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(150, 20, 160, 14);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public int getSpeed() {
        int index = speed_cbx.getSelectedIndex();
        switch (index) {
            case 0:
                return 500;
            case 4:
                return 5000;
            default:
                return index*1000;
        }
        
    }
    
    /**
     * Al clickear inicio, crea los filosofos, tenedores y grupo de sillas
     * Se da inicio a la función run de cada filosofo para realizar sus operaciones
     * 
     * @param evt 
     */
    private void iniciar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciar_btnActionPerformed
        iniciar_btn.setEnabled(false);
        speed_cbx.setEnabled(false);
        
        Silla s = new Silla(this);
        
        // Tenedores
        Tenedor[] tenedores = new Tenedor[5];
        for (int i=0; i<tenedores.length;i++) {
            tenedores[i] = new Tenedor(i,this);
        }
        
        // Filosofos
        Filosofo[] filosofos = new Filosofo[5];
        for (int i=0; i<filosofos.length;i++) {
            filosofos[i] = new Filosofo(i, tenedores[i], tenedores[(i+1)%5], s, this);
        }
        
        for (int i=0;i<filosofos.length;i++) {
            filosofos[i].start();
        }
        
        iniciar_btn.setEnabled(true);
        speed_cbx.setEnabled(true);
        reset();
    }//GEN-LAST:event_iniciar_btnActionPerformed

    /**
     * Cuando todos los filosofos están saciados, la interfaz de usuario
     * se reinicia.
     */
    public void reset() {
        counter0_txt.setText("");
        counter1_txt.setText("");
        counter2_txt.setText("");
        counter3_txt.setText("");
        counter4_txt.setText("");
        esperando_txt.setText("");
        esperando_txt.setEnabled(true);
        log_txt.setText("");
        
        updateEstado("",Color.GRAY,0);
        updateEstado("",Color.GRAY,1);
        updateEstado("",Color.GRAY,2);
        updateEstado("",Color.GRAY,3);
        updateEstado("",Color.GRAY,4);
        
    }
    private void counter4_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_counter4_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_counter4_txtActionPerformed

    private void esperando_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esperando_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_esperando_txtActionPerformed
    
    /**
     * Cambia el texto y color referente al estado de cada filosofo
     * @param msg texto que se va a mostrar
     * @param color color que se va a mostrar
     * @param id numero del filosofo
     */
    public void updateEstado(String msg, Color color, int id) {
        switch(id) {
            case 0:
                estado0_txtt.setText(msg);
                estado0_txtt.setForeground(color);
            break;
            case 1:
                estado1_txtt.setText(msg);
                estado1_txtt.setForeground(color);
            break;
            case 2:
                estado2_txtt.setText(msg);
                estado2_txtt.setForeground(color);
            break;
            case 3:
                estado3_txtt.setText(msg);
                estado3_txtt.setForeground(color);
            break;
            case 4:
                estado4_txtt.setText(msg);
                estado4_txtt.setForeground(color);
            break;
        }
    }
    
    /**
     * Cambia el texto del estado de un filosofo a SACIADO
     * @param id filosofo al que se le cambiará el texto
     */
    public void updateSaciado(int id) {
        switch(id) {
            case 0:
                updateEstado("Saciado", Color.BLUE, 0);
            break;
            case 1:
                updateEstado("Saciado", Color.BLUE, 1);
            break;
            case 2:
                updateEstado("Saciado", Color.BLUE, 2);
            break;
            case 3:
                updateEstado("Saciado", Color.BLUE, 3);
            break;
            case 4:
                updateEstado("Saciado", Color.BLUE, 4);
            break;
        }
        esperando_txt.setText("");
        esperando_txt.setEnabled(false);
        esperando_lbl.setEnabled(false);
    }
    
    /**
     * Aparece a un filosofo en la interfaz gráfica
     * Cuando un filosofo aparece, significa que tomó una silla disponible
     * @param id numero referente al filosofo que aparecerá
     */
    public void spawn(int id) {
        switch(id) {
            case 0:
                fil0.setVisible(true);
            break;
            case 1:
                fil1.setVisible(true);
            break;
            case 2:
                fil2.setVisible(true);
            break;
            case 3:
                fil3.setVisible(true);
            break;
            case 4:
                fil4.setVisible(true);
            break;
        }
    }
    
    /**
     * Desaparece a un filosofo de la interfaz gráfica
     * Cuando un filosofo desaparece, significa que liberó una silla
     * @param id numero referente al filosofo que desaparecerá
     */
    public void despawn(int id) {
        switch(id) {
            case 0:
                fil0.setVisible(false);
                updateEstado("Pensando", Color.RED, 0);
            break;
            case 1:
                fil1.setVisible(false);
                updateEstado("Pensando", Color.RED, 1);
            break;
            case 2:
                fil2.setVisible(false);
                updateEstado("Pensando", Color.RED, 2);
            break;
            case 3:
                fil3.setVisible(false);
                updateEstado("Pensando", Color.RED, 3);
            break;
            case 4:
                fil4.setVisible(false);
                updateEstado("Pensando", Color.RED, 4);
            break;
        }
    }
    
    /**
     * Actualiza la posición del tenedor en la interfaz gráfica
     * El tenedor se mueve hacia un filosofo
     * Simboliza que un filosofo tomó un tenedor y el tenedor se encuentra ocupado
     * @param idFilosofo numero del filosofo al que se le actualiza el tenedor
     * @param idTenedor numero del tenedor que se va a mover hacia un filosofo
     */
    public void updateFilosofoQ(int idFilosofo, int idTenedor) {
        // Update Log
        String display = log_txt.getText();
        log_txt.setText(display + "\nFilosofo "+idFilosofo+" toma el tenedor "+idTenedor);
        
        switch (idFilosofo) {
            case 0 -> {
                if (idTenedor == 0) {
                    fork_lbl0.setLocation(510,50);
                    updateEstado("Esperando", Color.ORANGE, 0);
                }
                if (idTenedor == 1) {
                    fork_lbl1.setLocation(550,50);
                    comiendo[0] = true;
                    updateEstado("Comiendo", Color.GREEN, 0);
                }
            }
            case 1 -> {
                if (idTenedor == 1) {
                    fork_lbl1.setLocation(640,120);
                    updateEstado("Esperando", Color.ORANGE, 1);
                }
                if (idTenedor == 2) {
                    fork_lbl2.setLocation(650,150);
                    updateEstado("Comiendo", Color.GREEN, 1);
                }
            }
            case 2 -> {
                if (idTenedor == 2) {
                    fork_lbl2.setLocation(620,260);
                    updateEstado("Esperando", Color.ORANGE, 2);
                }
                if (idTenedor == 3) {
                    fork_lbl3.setLocation(610, 260);
                    updateEstado("Comiendo", Color.GREEN, 2);
                }
            }
            case 3 -> {
                if (idTenedor == 3) {
                    fork_lbl3.setLocation(480,260);
                    updateEstado("Esperando", Color.ORANGE, 3);
                }
                if (idTenedor == 4) {
                    fork_lbl4.setLocation(430,250);
                    updateEstado("Comiendo", Color.GREEN, 3);
                }
            }
            case 4 -> {
                if (idTenedor == 4) {
                    fork_lbl4.setLocation(420,150);
                    updateEstado("Esperando", Color.ORANGE, 4);
                }
                if (idTenedor == 0) {
                    fork_lbl0.setLocation(430,120);
                    updateEstado("Comiendo", Color.GREEN, 4);
                }
            }
        }
    }
    
    public void logSilla(String msg) {
        System.out.println("--------------------------------------------");
        String display = log_txt.getText();
        log_txt.setText(display + "\n"+msg);
    }
    
    /**
     * Cambia el texto del estado de un filosofo a PENSANDO
     * @param id numero referente al filosofo al que se le cambiará el texto
     */
    public void esperandoSilla(int id) {
        switch(id) {
            case 0:
                updateEstado("Pensando", Color.RED, 0);
            break;
            case 1:
                updateEstado("Pensando", Color.RED, 1);
            break;
            case 2:
                updateEstado("Pensando", Color.RED, 2);
            break;
            case 3:
                updateEstado("Pensando", Color.RED, 3);
            break;
            case 4:
                updateEstado("Pensando", Color.RED, 4);
            break;
        }
        esperando_txt.setText(String.valueOf(id));
    }
    
    /**
     * Actualiza la posición del tenedor en la interfaz gráfica
     * El tenedor se mueve hacia la mesa
     * Simboliza que un filosofo deja de usar un tenedor, y el tenedor se encuentra disponible
     * @param idFilosofo
     * @param idTenedor 
     */
    public void updateFilosofoS(int idFilosofo, int idTenedor) {
        // Update Log
        String display = log_txt.getText();
        log_txt.setText(display + "\nFilosofo "+idFilosofo+" suelta el tenedor "+idTenedor);
        
        switch (idFilosofo) {
            case 0 -> {
                if (idTenedor == 0) { // izq
                    fork_lbl0.setLocation(480,90);
                }
                if (idTenedor == 1) { // der
                    fork_lbl1.setLocation(590,90);
                }
                updateEstado("Pensando", Color.RED, 0);
                
            }
            case 1 -> {
                if (idTenedor == 1) {
                    fork_lbl1.setLocation(590,90);
                }
                if (idTenedor == 2) {
                    fork_lbl2.setLocation(630,200);
                }
                updateEstado("Pensando", Color.RED, 1);
            }
            case 2 -> {
                if (idTenedor == 2) {
                    fork_lbl2.setLocation(630,200);
                }
                if (idTenedor == 3) {
                    fork_lbl3.setLocation(550,270);
                }
                updateEstado("Pensando", Color.RED, 2);
            }
            case 3 -> {
                if (idTenedor == 3) {
                    fork_lbl3.setLocation(550, 270);
                }
                if (idTenedor == 4) {
                    fork_lbl4.setLocation(440,190);
                }
                updateEstado("Pensando", Color.RED, 3);
            }
            case 4 -> {
                if (idTenedor == 4) {
                    fork_lbl4.setLocation(440,190);
                }
                if (idTenedor == 0) {
                    fork_lbl0.setLocation(480,90);
                }
                updateEstado("Pensando", Color.RED, 4);
            }
        }
    }
    
    /**
     * Actualiza la cantidad de veces que un filosofo ha comido
     * @param id numero de identificación referente al filosofo
     * @param counter numero de veces que un filosofo ha tomado dos tenedores
     */
    public void updateCounters(int id, int counter) {
        switch (id) {
            case 0:
                counter0_txt.setText(String.valueOf(counter));
                break;
            case 1:
                counter1_txt.setText(String.valueOf(counter));
                break;
            case 2:
                counter2_txt.setText(String.valueOf(counter));
                break;
            case 3:
                counter3_txt.setText(String.valueOf(counter));
                break;
            case 4:
                counter4_txt.setText(String.valueOf(counter));
                break;
        }
    }
    
    /**
     * Actualiza en la interfaz el número de veces que un filosofo debe comer
     * Este es un número generado de manera aleatoria, entre 1 y 9
     * @param id numero de identificación referente al filósofo
     * @param veces número de veces que el filosofo debe comer
     */
    public void maxVeces(int id, int veces) {
        switch (id) {
            case 0:
                max0_lbl.setText("/"+String.valueOf(veces));
                break;
            case 1:
                max1_lbl.setText("/"+String.valueOf(veces));
                break;
            case 2:
                max2_lbl.setText("/"+String.valueOf(veces));
                break;
            case 3:
                max3_lbl.setText("/"+String.valueOf(veces));
                break;
            case 4:
                max4_lbl.setText("/"+String.valueOf(veces));
                break;
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
                
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField counter0_txt;
    private javax.swing.JTextField counter1_txt;
    private javax.swing.JTextField counter2_txt;
    private javax.swing.JTextField counter3_txt;
    private javax.swing.JTextField counter4_txt;
    private javax.swing.JLabel esperando_lbl;
    private javax.swing.JTextField esperando_txt;
    private javax.swing.JLabel estado0_txtt;
    private javax.swing.JLabel estado1_txtt;
    private javax.swing.JLabel estado2_txtt;
    private javax.swing.JLabel estado3_txtt;
    private javax.swing.JLabel estado4_txtt;
    private javax.swing.JLabel fil0;
    private javax.swing.JLabel fil1;
    private javax.swing.JLabel fil2;
    private javax.swing.JLabel fil3;
    private javax.swing.JLabel fil4;
    private javax.swing.JLabel fork_lbl0;
    private javax.swing.JLabel fork_lbl1;
    private javax.swing.JLabel fork_lbl2;
    private javax.swing.JLabel fork_lbl3;
    private javax.swing.JLabel fork_lbl4;
    private javax.swing.JButton iniciar_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea log_txt;
    private javax.swing.JLabel max0_lbl;
    private javax.swing.JLabel max1_lbl;
    private javax.swing.JLabel max2_lbl;
    private javax.swing.JLabel max3_lbl;
    private javax.swing.JLabel max4_lbl;
    private javax.swing.JLabel plate0_lbl;
    private javax.swing.JLabel plate1_lbl;
    private javax.swing.JLabel plate2_lbl;
    private javax.swing.JLabel plate3_lbl;
    private javax.swing.JLabel plate4_lbl;
    private javax.swing.JComboBox<String> speed_cbx;
    private javax.swing.JLabel table_lbl;
    // End of variables declaration//GEN-END:variables


}
